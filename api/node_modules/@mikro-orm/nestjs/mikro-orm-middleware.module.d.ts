import type { MiddlewareConsumer } from '@nestjs/common';
import { MikroOrmMiddlewareModuleOptions } from './typings';
import type { MikroORM } from '@mikro-orm/core';
export declare class MikroOrmMiddlewareModule {
    private readonly options;
    constructor(options: MikroOrmMiddlewareModuleOptions);
    static forMiddleware(options?: MikroOrmMiddlewareModuleOptions): {
        module: typeof MikroOrmMiddlewareModule;
        providers: ({
            provide: symbol;
            useValue: MikroOrmMiddlewareModuleOptions;
            useFactory?: undefined;
            inject?: undefined;
        } | {
            provide: string;
            useFactory: (...args: MikroORM[]) => MikroORM<import("@mikro-orm/core").IDatabaseDriver<import("@mikro-orm/core").Connection>>[];
            inject: string[];
            useValue?: undefined;
        })[];
        exports: string[];
    };
    configure(consumer: MiddlewareConsumer): void;
}
